name: CI
on: [push, pull_request]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: test-ci

    - name: Ensure testing did not change sources
      run: git diff --exit-code

  smoke_test_benchmarks:
    name: Smoke-test benchmarks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: test-benchmarks

    - name: Ensure testing did not change sources
      run: git diff --exit-code

  smoke_test_fuzz:
    name: Smoke-test fuzz
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: test-fuzz

    - name: Ensure testing did not change sources
      run: git diff --exit-code

  test_release:
    name: Test Release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: test-release

    - name: Ensure testing did not change sources
      run: git diff --exit-code

  test_release_executables:
    name: Test Release Executables
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: test-release-executables

    - name: Ensure testing did not change sources
      run: git diff --exit-code


  package:
    name: Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'

    # Testing uses the development environment Docker container.
    # This action builds the container and executes the test suite inside it.
    - uses: ./.github/actions/test
      with:
        target: package

    - name: Ensure testing did not change sources
      run: git diff --exit-code


  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'
    - name: Install Rust (rustup)
      run: |
        rustup update
        rustup component add rustfmt
    - run: make indent-check

  audit:
    name: Cargo audit
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'
    - name: Install Rust (rustup)
      run: |
        rustup update
        rustup component add rustfmt
    - run: cargo install cargo-audit
    - run: cargo audit

  docs:
    name: Build docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: 'recursive'
    - name: Install Rust (rustup)
      run: |
        rustup update
        rustup component add rustfmt
    - run: cargo install mdbook
    - run: mdbook build docs
